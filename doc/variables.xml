<variablelist>
    <varlistentry>
        <term>
            <command>
                <option>acpiacadapter</option>
            </command>
            <option>(adapter)</option>
        </term>
        <listitem>ACPI ac adapter state. On linux, the adapter option specifies the
        subfolder of /sys/class/power_supply containing the state information (tries "AC"
        and "ADP1" if there is no argument given). Non-linux systems ignore it.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>acpifan</option>
            </command>
        </term>
        <listitem>ACPI fan state 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>acpitemp</option>
            </command>
        </term>
        <listitem>ACPI temperature in C. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>addr</option>
            </command>
            <option>(interface)</option>
        </term>
        <listitem>IP address for an interface, or "No Address" if
        no address is assigned. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>addrs</option>
            </command>
            <option>(interface)</option>
        </term>
        <listitem>IP addresses for an interface (if one - works
        like addr). Linux only. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>adt746xcpu</option>
            </command>
        </term>
        <listitem>CPU temperature from therm_adt746x 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>adt746xfan</option>
            </command>
        </term>
        <listitem>Fan speed from therm_adt746x 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>alignc</option>
            </command>
            <option>(num)</option>
        </term>
        <listitem>Align text to centre 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>alignr</option>
            </command>
            <option>(num)</option>
        </term>
        <listitem>Right-justify text, with space of N 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd</option>
            </command>
            <option>host</option>
            <option>port</option>
        </term>
        <listitem>Sets up the connection to apcupsd daemon. Prints
        nothing, defaults to localhost:3551 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_cable</option>
            </command>
        </term>
        <listitem>Prints the UPS connection type. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_charge</option>
            </command>
        </term>
        <listitem>Current battery capacity in percent. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_lastxfer</option>
            </command>
        </term>
        <listitem>Reason for last transfer from line to battery. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_linev</option>
            </command>
        </term>
        <listitem>Nominal input voltage. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_load</option>
            </command>
        </term>
        <listitem>Current load in percent. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_loadbar</option>
            </command>
        </term>
        <listitem>Bar showing current load. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_loadgauge</option>
            </command>
            <option>(height),(width)</option>
        </term>
        <listitem>Gauge that shows current load. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_loadgraph</option>
            </command>
            <option>(height),(width) (gradient colour 1) (gradient
            colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>History graph of current load. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_model</option>
            </command>
        </term>
        <listitem>Prints the model of the UPS. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_name</option>
            </command>
        </term>
        <listitem>Prints the UPS user-defined name. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_status</option>
            </command>
        </term>
        <listitem>Prints current status (on-line, on-battery). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_temp</option>
            </command>
        </term>
        <listitem>Current internal temperature. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_timeleft</option>
            </command>
        </term>
        <listitem>Time left to run on battery. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apcupsd_upsmode</option>
            </command>
        </term>
        <listitem>Prints the UPS mode (e.g. standalone). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apm_adapter</option>
            </command>
        </term>
        <listitem>Display APM AC adapter status (FreeBSD only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apm_battery_life</option>
            </command>
        </term>
        <listitem>Display APM battery life in percent (FreeBSD
        only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>apm_battery_time</option>
            </command>
        </term>
        <listitem>Display remaining APM battery life in hh:mm:ss or
        "unknown" if AC adapterstatus is on-line or charging
        (FreeBSD only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_bar</option>
            </command>
            <option>(height),(width)</option>
        </term>
        <listitem>Progress bar 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_bitrate</option>
            </command>
        </term>
        <listitem>Bitrate of current tune 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_channels</option>
            </command>
        </term>
        <listitem>Number of audio channels of current tune 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_filename</option>
            </command>
        </term>
        <listitem>Full path and filename of current tune 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_frequency</option>
            </command>
        </term>
        <listitem>Sampling frequency of current tune 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_length</option>
            </command>
        </term>
        <listitem>Total length of current tune as MM:SS 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_length_seconds</option>
            </command>
        </term>
        <listitem>Total length of current tune in seconds 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_main_volume</option>
            </command>
        </term>
        <listitem>The current volume fetched from Audacious 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_playlist_length</option>
            </command>
        </term>
        <listitem>Number of tunes in playlist 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_playlist_position</option>
            </command>
        </term>
        <listitem>Playlist position of current tune 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_position</option>
            </command>
        </term>
        <listitem>Position of current tune (MM:SS) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_position_seconds</option>
            </command>
        </term>
        <listitem>Position of current tune in seconds 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_status</option>
            </command>
        </term>
        <listitem>Player status (Playing/Paused/Stopped/Not
        running) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>audacious_title</option>
            </command>
            <option>(max length)</option>
        </term>
        <listitem>Title of current tune with optional maximum
        length specifier 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>battery</option>
            </command>
            <option>(num)</option>
        </term>
        <listitem>Battery status and remaining percentage capacity
        of ACPI or APM battery. ACPI battery number can be given as
        argument (default is BAT0). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>battery_bar</option>
            </command>
            <option>(height),(width) (num)</option>
        </term>
        <listitem>Battery percentage remaining of ACPI battery in a
        bar. ACPI battery number can be given as argument (default
        is BAT0). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>battery_percent</option>
            </command>
            <option>(num)</option>
        </term>
        <listitem>Battery percentage remaining for ACPI battery.
        ACPI battery number can be given as argument (default is
        BAT0). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>battery_short</option>
            </command>
            <option>(num)</option>
        </term>
        <listitem>Battery status and remaining percentage capacity
        of ACPI or APM battery. ACPI battery number can be given as
        argument (default is BAT0). This mode display a short
        status, which means that C is displayed instead of
        charging, D for discharging, F for full, N for not present,
        E for empty and U for unknown. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>battery_time</option>
            </command>
            <option>(num)</option>
        </term>
        <listitem>Battery charge/discharge time remaining of ACPI
        battery. ACPI battery number can be given as argument
        (default is BAT0). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>blink</option>
            </command>
            <option>text_and_other_conky_vars</option>
        </term>
        <listitem>Let 'text_and_other_conky_vars' blink on and off.
        
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>bmpx_album</option>
            </command>
        </term>
        <listitem>Album in current BMPx track 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>bmpx_artist</option>
            </command>
        </term>
        <listitem>Artist in current BMPx track 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>bmpx_bitrate</option>
            </command>
        </term>
        <listitem>Bitrate of the current BMPx track 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>bmpx_title</option>
            </command>
        </term>
        <listitem>Title of the current BMPx track 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>bmpx_track</option>
            </command>
        </term>
        <listitem>Track number of the current BMPx track 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>bmpx_uri</option>
            </command>
        </term>
        <listitem>URI of the current BMPx track 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>buffers</option>
            </command>
        </term>
        <listitem>Amount of memory buffered 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>cached</option>
            </command>
        </term>
        <listitem>Amount of memory cached 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>cmdline_to_pid</option>
            </command>
            <option>string</option>
        </term>
        <listitem>PID of the first process that has string in it's
	commandline
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>color</option>
            </command>
            <option>(color)</option>
        </term>
        <listitem>Change drawing color to 'color' which is a name of
        a color or a hexcode preceded with # (for example #0A1B2C ).
        If you use ncurses only the following colors are supported:
	red,green,yellow,blue,magenta,cyan,black,white.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>colorN</option>
            </command>
        </term>
        <listitem>Change drawing color to colorN configuration
        option, where N is a digit between 0 and 9, inclusively. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>combine</option>
            </command>
            <option>var1 var2</option>
        </term>
        <listitem>Places the lines of var2 to the right of the
        lines of var1 separated by the chars that are put between
        var1 and var2. For example: ${combine ${head /proc/cpuinfo
        2} - ${head /proc/meminfo 1}} gives as output
        "cpuinfo_line1 - meminfo_line1" on line 1 and
        "cpuinfo_line2 -" on line 2. $combine vars can also be
        nested to place more vars next to each other. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>conky_build_arch</option>
            </command>
        </term>
        <listitem>CPU architecture Conky was built for 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>conky_build_date</option>
            </command>
        </term>
        <listitem>Date Conky was built 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>conky_version</option>
            </command>
        </term>
        <listitem>Conky version 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>cpu</option>
            </command>
            <option>(cpuN)</option>
        </term>
        <listitem>CPU usage in percents. For SMP machines, the CPU
        number can be provided as an argument. ${cpu cpu0} is the
        total usage, and ${cpu cpuX} (X &gt;= 1) are individual
        CPUs. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>cpubar</option>
            </command>
            <option>(cpuN) (height),(width)</option>
        </term>
        <listitem>Bar that shows CPU usage, height is bar's height
        in pixels. See $cpu for more info on SMP. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>cpugauge</option>
            </command>
            <option>(cpuN) (height),(width)</option>
        </term>
        <listitem>Elliptical gauge that shows CPU usage, height and
        width are gauge's vertical and horizontal axis
        respectively. See $cpu for more info on SMP. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>cpugraph</option>
            </command>
            <option>(cpuN) (height),(width) (gradient colour 1)
            (gradient colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>CPU usage graph, with optional colours in hex,
        minus the #. See $cpu for more info on SMP. Uses a
        logarithmic scale (to see small numbers) when you use the
        -l switch. Takes the switch '-t' to use a temperature
        gradient, which makes the gradient values change depending
        on the amplitude of a particular graph value (try it and
        see). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>curl</option>
            </command>
            <option>url (interval_in_minutes)</option>
        </term>
        <listitem>
            <para>Download data from URI using Curl at the
            specified interval. The interval may be a floating
            point value greater than 0, otherwise defaults to 15
            minutes. Most useful when used in conjunction with Lua
            and the Lua API. This object is threaded, and once a
            thread is created it can't be explicitly destroyed.
            One thread will run for each URI specified. You can use
            any protocol that Curl supports.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>desktop</option>
            </command>
        </term>
        <listitem>Number of the desktop on which conky is running
        or the message "Not running in X" if this is the case. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>desktop_name</option>
            </command>
        </term>
        <listitem>Name of the desktop on which conky is running or
        the message "Not running in X" if this is the case. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>desktop_number</option>
            </command>
        </term>
        <listitem>Number of desktops or the message "Not running in
        X" if this is the case. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>disk_protect</option>
            </command>
            <option>device</option>
        </term>
        <listitem>Disk protection status, if supported (needs
        kernel-patch). Prints either "frozen" or "free " (note the
        padding). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>diskio</option>
            </command>
            <option>(device)</option>
        </term>
        <listitem>Displays current disk IO. Device is optional, and
        takes the form of sda for /dev/sda. Individual partitions
        are allowed. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>diskio_read</option>
            </command>
            <option>(device)</option>
        </term>
        <listitem>Displays current disk IO for reads. Device as in
        diskio. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>diskio_write</option>
            </command>
            <option>(device)</option>
        </term>
        <listitem>Displays current disk IO for writes. Device as in
        diskio. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>diskiograph</option>
            </command>
            <option>(device) (height),(width) (gradient colour 1)
            (gradient colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>Disk IO graph, colours defined in hex, minus the
        #. If scale is non-zero, it becomes the scale for the
        graph. Uses a logarithmic scale (to see small numbers) when
        you use -l switch. Takes the switch '-t' to use a
        temperature gradient, which makes the gradient values
        change depending on the amplitude of a particular graph
        value (try it and see). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>diskiograph_read</option>
            </command>
            <option>(device) (height),(width) (gradient colour 1)
            (gradient colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>Disk IO graph for reads, colours defined in hex,
        minus the #. If scale is non-zero, it becomes the scale for
        the graph. Device as in diskio. Uses a logarithmic scale
        (to see small numbers) when you use -l switch. Takes the
        switch '-t' to use a temperature gradient, which makes the
        gradient values change depending on the amplitude of a
        particular graph value (try it and see). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>diskiograph_write</option>
            </command>
            <option>(device) (height),(width) (gradient colour 1)
            (gradient colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>Disk IO graph for writes, colours defined in hex,
        minus the #. If scale is non-zero, it becomes the scale for
        the graph. Device as in diskio. Uses a logarithmic scale
        (to see small numbers) when you use -l switch. Takes the
        switch '-t' to use a temperature gradient, which makes the
        gradient values change depending on the amplitude of a
        particular graph value (try it and see). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>downspeed</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Download speed in suitable IEC units 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>downspeedf</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Download speed in KiB with one decimal 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>downspeedgraph</option>
            </command>
            <option>(netdev) (height),(width) (gradient colour 1)
            (gradient colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>Download speed graph, colours defined in hex,
        minus the #. If scale is non-zero, it becomes the scale for
        the graph. Uses a logarithmic scale (to see small numbers)
        when you use -l switch. Takes the switch '-t' to use a
        temperature gradient, which makes the gradient values
        change depending on the amplitude of a particular graph
        value (try it and see). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>draft_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of mails marked as draft in the specified
        mailbox or mail spool if not. Only maildir type mailboxes
        are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>else</option>
            </command>
        </term>
        <listitem>Text to show if any of the above are not true 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>endif</option>
            </command>
            <option />
        </term>
        <listitem>Ends an $if block. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>entropy_avail</option>
            </command>
        </term>
        <listitem>Current entropy available for crypto freaks 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>entropy_bar</option>
            </command>
            <option>(height),(width)</option>
        </term>
        <listitem>Normalized bar of available entropy for crypto
        freaks 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>entropy_perc</option>
            </command>
        </term>
        <listitem>Percentage of entropy available in comparison to
        the poolsize 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>entropy_poolsize</option>
            </command>
        </term>
        <listitem>Total size of system entropy pool for crypto
        freaks 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>eval</option>
            </command>
            <option>string</option>
        </term>
        <listitem>Evaluates given string according to the rules of
        TEXT interpretation, i.e. parsing any contained text object
        specifications into their output, any occuring '$$' into a
        single '$' and so on. The output is then being parsed
        again. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>eve</option>
            </command>
            <option>api_userid api_key character_id</option>
        </term>
        <listitem>Fetches your currently training skill from the
        Eve Online API servers (http://www.eve-online.com/) and
        displays the skill along with the remaining training time. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>exec</option>
            </command>
            <option>command</option>
        </term>
        <listitem>Executes a shell command and displays the output
        in conky. warning: this takes a lot more resources than
        other variables. I'd recommend coding wanted behaviour in C
        and posting a patch. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>execbar</option>
            </command>
            <option>command</option>
        </term>
        <listitem>Same as exec, except if the first value return is
        a value between 0-100, it will use that number for a bar.
        The size for bars can be controlled via the
        default_bar_size config setting. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>execgauge</option>
            </command>
            <option>command</option>
        </term>
        <listitem>Same as exec, except if the first value returned
        is a value between 0-100, it will use that number for a
        gauge. The size for gauges can be controlled via the
        default_gauge_size config setting. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>execgraph</option>
            </command>
            <option>(-t) (-l) command</option>
        </term>
        <listitem>Same as execbar, but graphs values. Uses a
        logaritmic scale when the log option (-l switch) is given
        (to see small numbers). Values still have to be between 0
        and 100. The size for graphs can be controlled via the
        default_graph_size config setting. Takes the switch '-t' to
        use a temperature gradient, which makes the gradient values
        change depending on the amplitude of a particular graph
        value (try it and see). If -t or -l is your first argument,
        you may need to preceed it by a space (' ').
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>execi</option>
            </command>
            <option>interval command</option>
        </term>
        <listitem>Same as exec but with specific interval. Interval
        can't be less than update_interval in configuration. See
        also $texeci
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>execibar</option>
            </command>
            <option>interval command</option>
        </term>
        <listitem>Same as execbar, except with an interval 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>execigauge</option>
            </command>
            <option>interval command</option>
        </term>
        <listitem>Same as execgauge, but takes an interval arg and
        gauges values. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>execigraph</option>
            </command>
            <option>interval (-t) (-l) command</option>
        </term>
        <listitem>Same as execgraph, but takes an interval arg and
        graphs values. If -t or -l is your first argument, you may
        need to preceed it by a space (' '). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>execp</option>
            </command>
            <option>command</option>
        </term>
        <listitem>Executes a shell command and displays the output
        in conky. warning: this takes a lot more resources than
        other variables. I'd recommend coding wanted behaviour in C
        and posting a patch. This differs from $exec in that it
        parses the output of the command, so you can insert things
        like ${color red}hi!${color} in your script and have it
        correctly parsed by Conky. Caveats: Conky parses and
        evaluates the output of $execp every time Conky loops, and
        then destroys all the objects. If you try to use anything
        like $execi within an $execp statement, it will
        functionally run at the same interval that the $execp
        statement runs, as it is created and destroyed at every
        interval. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>execpi</option>
            </command>
            <option>interval command</option>
        </term>
        <listitem>Same as execp but with specific interval.
        Interval can't be less than update_interval in
        configuration. Note that the output from the $execpi
        command is still parsed and evaluated at every interval. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>flagged_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of mails marked as flagged in the
        specified mailbox or mail spool if not. Only maildir type
        mailboxes are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>font</option>
            </command>
            <option>(font)</option>
        </term>
        <listitem>Specify a different font. This new font will
        apply to the current line and everything following. You can
        use a $font with no arguments to change back to the default
        font (much like with $color) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>format_time</option>
            </command>
            <option>seconds format</option>
        </term>
        <listitem>Format time given in seconds. This var only works when
	the times_in_seconds configuration setting is on. Format is a string
	that should start and end with a "-char. The "-chars are not
	part of the output, \w,\d,\h,\m,\s,\(,\) and \\ are replaced by
	weeks,days,hours,minutes,seconds,(,) and \. If you leave out a unit,
	it's value will be expressed in the highest unite lower then the
	one left out. Text between ()-chars will not be visible if a
	replaced unit in this text is 0. If seconds is a decimal number
	then you can see the numbers behind the point by using \S
	followed by a number that specifies the amount of
	digits behind the point that you want to see (maximum 9).
	You can also place a 'x' behind \S so you have all digits behind
	the point and no trailing zero's. (also maximum 9)
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>forwarded_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of mails marked as forwarded in the
        specified mailbox or mail spool if not. Only maildir type
        mailboxes are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>freq</option>
            </command>
            <option>(n)</option>
        </term>
        <listitem>Returns CPU #n's frequency in MHz. CPUs are
        counted from 1. If omitted, the parameter defaults to 1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>freq_g</option>
            </command>
            <option>(n)</option>
        </term>
        <listitem>Returns CPU #n's frequency in GHz. CPUs are
        counted from 1. If omitted, the parameter defaults to 1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>fs_bar</option>
            </command>
            <option>(height),(width) fs</option>
        </term>
        <listitem>Bar that shows how much space is used on a file
        system. height is the height in pixels. fs is any file on
        that file system. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>fs_bar_free</option>
            </command>
            <option>(height),(width) fs</option>
        </term>
        <listitem>Bar that shows how much space is free on a file
        system. height is the height in pixels. fs is any file on
        that file system. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>fs_free</option>
            </command>
            <option>(fs)</option>
        </term>
        <listitem>Free space on a file system available for users. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>fs_free_perc</option>
            </command>
            <option>(fs)</option>
        </term>
        <listitem>Free percentage of space on a file system
        available for users. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>fs_size</option>
            </command>
            <option>(fs)</option>
        </term>
        <listitem>File system size. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>fs_type</option>
            </command>
            <option>(fs)</option>
        </term>
        <listitem>File system type. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>fs_used</option>
            </command>
            <option>(fs)</option>
        </term>
        <listitem>File system used space. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>fs_used_perc</option>
            </command>
            <option>(fs)</option>
        </term>
        <listitem>Percent of file system used space. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>goto</option>
            </command>
            <option>x</option>
        </term>
        <listitem>The next element will be printed at position 'x'.
        
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>gw_iface</option>
            </command>
        </term>
        <listitem>Displays the default route's interface or
        "multiple"/"none" accordingly. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>gw_ip</option>
            </command>
        </term>
        <listitem>Displays the default gateway's IP or
        "multiple"/"none" accordingly. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>hddtemp</option>
            </command>
            <option>(dev)</option>
        </term>
        <listitem>Displays temperature of a selected hard disk
		drive as reported by the hddtemp daemon. Use hddtemp_host
		and hddtemp_port to specify a host and port for all hddtemp
		objects. If no dev parameter is given, the first disk returned
		by the hddtemp daemon is used.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>head</option>
            </command>
            <option>logfile lines (next_check)</option>
        </term>
        <listitem>Displays first N lines of supplied text file. The
        file is checked every 'next_check' update. If next_check is
        not supplied, Conky defaults to 2. Max of 30 lines can be
        displayed, or until the text buffer is filled. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>hr</option>
            </command>
            <option>(height)</option>
        </term>
        <listitem>Horizontal line, height is the height in pixels 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>hwmon</option>
            </command>
            <option>(dev) type n (factor offset)</option>
        </term>
        <listitem>Hwmon sensor from sysfs (Linux 2.6). Parameter
        dev may be omitted if you have only one hwmon device.
        Parameter type is either 'in' or 'vol' meaning voltage;
        'fan' meaning fan; 'temp' meaning temperature. Parameter n
        is number of the sensor. See /sys/class/hwmon/ on your
        local computer. The optional arguments 'factor' and
        'offset' allow precalculation of the raw input, which is
        being modified as follows: 'input = input * factor +
        offset'. Note that they have to be given as decimal values
        (i.e. contain at least one decimal place). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i2c</option>
            </command>
            <option>(dev) type n (factor offset)</option>
        </term>
        <listitem>I2C sensor from sysfs (Linux 2.6). Parameter dev
        may be omitted if you have only one I2C device. Parameter
        type is either 'in' or 'vol' meaning voltage; 'fan' meaning
        fan; 'temp' meaning temperature. Parameter n is number of
        the sensor. See /sys/bus/i2c/devices/ on your local
        computer. The optional arguments 'factor' and 'offset'
        allow precalculation of the raw input, which is being
        modified as follows: 'input = input * factor + offset'.
        Note that they have to be given as decimal values (i.e.
        contain at least one decimal place). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_ac_status</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays whether ac power is on, as listed in
        /proc/i8k (translated to human-readable). Beware that this
        is by default not enabled by i8k itself. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_bios</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays the bios version as listed in /proc/i8k. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_buttons_status</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays the volume buttons status as listed in
        /proc/i8k. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_cpu_temp</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays the cpu temperature in Celsius, as
        reported by /proc/i8k. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_left_fan_rpm</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays the left fan's rate of rotation, in
        revolutions per minute as listed in /proc/i8k. Beware, some
        laptops i8k reports these fans in reverse order. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_left_fan_status</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays the left fan status as listed in
        /proc/i8k (translated to human-readable). Beware, some
        laptops i8k reports these fans in reverse order. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_right_fan_rpm</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays the right fan's rate of rotation, in
        revolutions per minute as listed in /proc/i8k. Beware, some
        laptops i8k reports these fans in reverse order. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_right_fan_status</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays the right fan status as listed in
        /proc/i8k (translated to human-readable). Beware, some
        laptops i8k reports these fans in reverse order. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_serial</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays your laptop serial number as listed in
        /proc/i8k. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>i8k_version</option>
            </command>
            <option />
        </term>
        <listitem>If running the i8k kernel driver for Inspiron
        laptops, displays the version formatting of /proc/i8k. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>ibm_brightness</option>
            </command>
        </term>
        <listitem>If running the IBM ACPI, displays the brigtness
        of the laptops's LCD (0-7). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>ibm_fan</option>
            </command>
        </term>
        <listitem>If running the IBM ACPI, displays the fan speed. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>ibm_temps</option>
            </command>
            <option>N</option>
        </term>
        <listitem>If running the IBM ACPI, displays the
        temperatures from the IBM temperature sensors (N=0..7)
        Sensor 0 is on the CPU, 3 is on the GPU. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>ibm_volume</option>
            </command>
        </term>
        <listitem>If running the IBM ACPI, displays the "master"
        volume, controlled by the volume keys (0-14). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>iconv_start</option>
            </command>
            <option>codeset_from codeset_to</option>
        </term>
        <listitem>Convert text from one codeset to another using
        GNU iconv. Needs to be stopped with iconv_stop. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>iconv_stop</option>
            </command>
            <option />
        </term>
        <listitem>Stop iconv codeset conversion. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_empty</option>
            </command>
            <option>(var)</option>
        </term>
        <listitem>if conky variable VAR is empty, display
        everything between $if_empty and the matching $endif 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_existing</option>
            </command>
            <option>file (string)</option>
        </term>
        <listitem>if FILE exists, display everything between
        if_existing and the matching $endif. The optional second
        parameter checks for FILE containing the specified string
        and prints everything between $if_existing and the matching
        $endif. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_gw</option>
            </command>
        </term>
        <listitem>if there is at least one default gateway, display
        everything between $if_gw and the matching $endif 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_match</option>
            </command>
            <option>expression</option>
        </term>
        <listitem>Evaluates the given boolean expression, printing
        everything between $if_match and the matching $endif
        depending on whether the evaluation returns true or not.
        Valid expressions consist of a left side, an operator and a
        right side. Left and right sides are being parsed for
        contained text objects before evaluation. Recognised left
        and right side types are: 
        <simplelist>
            <member>
            <command>double</command>Argument consists of only
            digits and a single dot.</member>
            <member>
            <command>long</command>Argument consists of only
            digits.</member>
            <member>
            <command>string</command>Argument is enclosed in
            quotation marks (")</member>
        </simplelist>Valid operands are: '&gt;', '&lt;', '&gt;=',
        '&lt;=', '==', '!='. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_mixer_mute</option>
            </command>
            <option>(mixer)</option>
        </term>
        <listitem>If mixer exists, display everything between
        $if_mixer_mute and the matching $endif. If no mixer is
        specified, "Vol" is used. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_mounted</option>
            </command>
            <option>(mountpoint)</option>
        </term>
        <listitem>if MOUNTPOINT is mounted, display everything
        between $if_mounted and the matching $endif 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_mpd_playing</option>
            </command>
        </term>
        <listitem>if mpd is playing or paused, display everything
        between $if_mpd_playing and the matching $endif 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_running</option>
            </command>
            <option>(process)</option>
        </term>
        <listitem>if PROCESS is running, display everything
        $if_running and the matching $endif. This uses the
        ``pidof'' command, so the -x switch is also supported. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_smapi_bat_installed</option>
            </command>
            <option>(INDEX)</option>
        </term>
        <listitem>when using smapi, if the battery with index INDEX
        is installed, display everything between
        $if_smapi_bat_installed and the matching $endif 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_up</option>
            </command>
            <option>(interface)</option>
        </term>
        <listitem>if INTERFACE exists and is up, display everything
        between $if_up and the matching $endif 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_updatenr</option>
            </command>
            <option>(updatenr)</option>
        </term>
        <listitem>If it's the UPDATENR-th time that conky updates,
        display everything between $if_updatenr and the matching
        $endif. The counter resets when the highest UPDATENR is
        reached. Example : "{$if_updatenr 1}foo$endif{$if_updatenr
        2}bar$endif{$if_updatenr 4}$endif" shows foo 25% of the
        time followed by bar 25% of the time followed by nothing
        the other half of the time. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_xmms2_connected</option>
            </command>
        </term>
        <listitem>Display everything between $if_xmms2_connected
        and the matching $endif if xmms2 is running. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>image</option>
            </command>
            <option>&lt;path to image&gt; (-p x,y) (-s WxH) (-n)
            (-f interval)</option>
        </term>
        <listitem>Renders an image from the path specified using
        Imlib2. Takes 4 optional arguments: a position, a size, a
        no-cache switch, and a cache flush interval. Changing the
        x,y position will move the position of the image, and
        changing the WxH will scale the image. If you specify the
        no-cache flag (-n), the image will not be cached.
        Alternately, you can specify the -f int switch to specify a
        cache flust interval for a particular image. Example:
        ${image /home/brenden/cheeseburger.jpg -p 20,20 -s 200x200}
        will render 'cheeseburger.jpg' at (20,20) scaled to 200x200
        pixels. Conky does not make any attempt to adjust the
        position (or any other formatting) of images, they are just
        rendered as per the arguments passed. The only reason
        $image is part of the TEXT section, is to allow for runtime
        modifications, through $execp $lua_parse, or some other
        method. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>imap_messages</option>
            </command>
            <option>(args)</option>
        </term>
        <listitem>Displays the number of messages in your global
        IMAP inbox by default. You can define individual IMAP
        inboxes separately by passing arguments to this object.
        Arguments are: "host user pass [-i interval (in seconds)]
        [-f 'folder'] [-p port] [-e 'command'] [-r retries]". Default
        port is 143, default folder is 'INBOX', default interval is
        5 minutes, and default number of retries before giving up
        is 5. If the password is supplied as '*', you will be
        prompted to enter the password when Conky starts. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>imap_unseen</option>
            </command>
            <option>(args)</option>
        </term>
        <listitem>Displays the number of unseen messages in your
        global IMAP inbox by default. You can define individual
        IMAP inboxes separately by passing arguments to this
        object. Arguments are: "host user pass [-i interval (in
        seconds)] [-f 'folder'] [-p port] [-e 'command'] [-r retries]".
        Default port is 143, default folder is 'INBOX', default
        interval is 5 minutes, and default number of retries before
        giving up is 5. If the password is supplied as '*', you
        will be prompted to enter the password when Conky starts. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>include</option>
            </command>
            <option>path</option>
        </term>
        <listitem>
            <para>Loads the configfile at path, places the
            configsettings behind the configsettings in the orginal
            config and places the vars where the includevar
            stood.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>ioscheduler</option>
            </command>
            <option>disk</option>
        </term>
        <listitem>Prints the current ioscheduler used for the given
        disk name (i.e. e.g. "hda" or "sdb") 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>kernel</option>
            </command>
        </term>
        <listitem>Kernel version 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>laptop_mode</option>
            </command>
        </term>
        <listitem>The value of /proc/sys/vm/laptop_mode 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>lines</option>
            </command>
            <option>textfile</option>
        </term>
        <listitem>Displays the number of lines in the given file 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>loadavg</option>
            </command>
            <option>(1|2|3)</option>
        </term>
        <listitem>System load average, 1 is for past 1 minute, 2
	for past 5 minutes and 3 for past 15 minutes. Without argument, prints
	all three values separated by whitespace.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>loadgraph</option>
            </command>
            <option>(height),(width) (gradient colour 1)
            (gradient colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>Load1 average graph, similar to xload, with
        optional colours in hex, minus the #. Uses a logarithmic
        scale (to see small numbers) when you use the -l switch.
        Takes the switch '-t' to use a temperature gradient, which
        makes the gradient values change depending on the amplitude
        of a particular graph value (try it and see). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>lua</option>
            </command>
            <option>function_name (function parameters)</option>
        </term>
        <listitem>Executes a Lua function with given parameters,
        then prints the returned string. See also 'lua_load' on how
        to load scripts. Conky puts 'conky_' in front of
        function_name to prevent accidental calls to the wrong
        function unless you put you place 'conky_' in front of it
        yourself. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>lua_bar</option>
            </command>
            <option>(height, width) function_name (function
            parameters)</option>
        </term>
        <listitem>Executes a Lua function with given parameters and
        draws a bar. Expects result value to be an integer between
        0 and 100. See also 'lua_load' on how to load scripts.
        Conky puts 'conky_' in front of function_name to prevent
        accidental calls to the wrong function unless you put you
        place 'conky_' in front of it yourself. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>lua_gauge</option>
            </command>
            <option>(height, width) function_name (function
            parameters)</option>
        </term>
        <listitem>Executes a Lua function with given parameters and
        draws a gauge. Expects result value to be an integer
        between 0 and 100. See also 'lua_load' on how to load
        scripts. Conky puts 'conky_' in front of function_name to
        prevent accidental calls to the wrong function unless you
        put you place 'conky_' in front of it yourself. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>lua_graph</option>
            </command>
            <option>function_name (height),(width) (gradient colour
            1) (gradient colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>Executes a Lua function with and draws a graph.
        Expects result value to be any number, and by default will
        scale to show the full range. See also 'lua_load' on how to
        load scripts. Takes the switch '-t' to use a temperature
        gradient, which makes the gradient values change depending
        on the amplitude of a particular graph value (try it and
        see). Conky puts 'conky_' in front of function_name to
        prevent accidental calls to the wrong function unless you
        put you place 'conky_' in front of it yourself. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>lua_parse</option>
            </command>
            <option>function_name (function parameters)</option>
        </term>
        <listitem>Executes a Lua function with given parameters as
        per $lua, then parses and prints the result value as per
        the syntax for Conky's TEXT section. See also 'lua_load' on
        how to load scripts. Conky puts 'conky_' in front of
        function_name to prevent accidental calls to the wrong
        function unless you put you place 'conky_' in front of it
        yourself. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>machine</option>
            </command>
        </term>
        <listitem>Machine, i686 for example 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mails</option>
            </command>
            <option>(mailbox)</option>
            <option>(interval)</option>
        </term>
        <listitem>Mail count in the specified mailbox or your mail
        spool if not. Both mbox and maildir type mailboxes are
        supported. You can use a program like fetchmail to get
        mails from some server using your favourite protocol. See
        also new_mails. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mboxscan</option>
            </command>
            <option>(-n number of messages to print) (-fw from
            width) (-sw subject width) mbox</option>
        </term>
        <listitem>Print a summary of recent messages in an mbox
        format mailbox. mbox parameter is the filename of the
        mailbox (can be encapsulated using '"', ie. ${mboxscan -n
        10 "/home/brenden/some box"} 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mem</option>
            </command>
        </term>
        <listitem>Amount of memory in use 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>membar</option>
            </command>
            <option>(height),(width)</option>
        </term>
        <listitem>Bar that shows amount of memory in use 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>memeasyfree</option>
            </command>
        </term>
        <listitem>Amount of free memory including the memory that
        is very easily freed (buffers/cache) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>memfree</option>
            </command>
        </term>
        <listitem>Amount of free memory 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>memgauge</option>
            </command>
            <option>(height),(width)</option>
        </term>
        <listitem>Gauge that shows amount of memory in use (see
        cpugauge) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>memgraph</option>
            </command>
            <option>(height),(width) (gradient colour 1) (gradient
            colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>Memory usage graph. Uses a logarithmic scale (to
        see small numbers) when you use the -l switch. Takes the
        switch '-t' to use a temperature gradient, which makes the
        gradient values change depending on the amplitude of a
        particular graph value (try it and see). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>memmax</option>
            </command>
        </term>
        <listitem>Total amount of memory 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>memperc</option>
            </command>
        </term>
        <listitem>Percentage of memory in use 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mixer</option>
            </command>
            <option>(device)</option>
        </term>
        <listitem>Prints the mixer value as reported by the OS.
        On Linux, this variable uses the OSS emulation, so you
        need the proper kernel module loaded.
        Default mixer is "Vol", but you can specify one of the
        available OSS controls: "Vol", "Bass", "Trebl", "Synth",
        "Pcm", "Spkr", "Line", "Mic", "CD", "Mix", "Pcm2 ", "Rec",
        "IGain", "OGain", "Line1", "Line2", "Line3", "Digital1",
        "Digital2", "Digital3", "PhoneIn", "PhoneOut", "Video",
        "Radio" and "Monitor".
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mixerbar</option>
            </command>
            <option>(device)</option>
        </term>
        <listitem>Displays mixer value in a bar as reported by the
        OS. See docs for $mixer for details on arguments. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mixerl</option>
            </command>
            <option>(device)</option>
        </term>
        <listitem>Prints the left channel mixer value as reported
        by the OS. See docs for $mixer for details on arguments. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mixerlbar</option>
            </command>
            <option>(device)</option>
        </term>
        <listitem>Displays the left channel mixer value in a bar as
        reported by the OS. See docs for $mixer for details on
        arguments. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mixerr</option>
            </command>
            <option>(device)</option>
        </term>
        <listitem>Prints the right channel mixer value as reported
        by the OS. See docs for $mixer for details on arguments. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mixerrbar</option>
            </command>
            <option>(device)</option>
        </term>
        <listitem>Displays the right channel mixer value in a bar
        as reported by the OS. See docs for $mixer for details on
        arguments. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_album</option>
            </command>
        </term>
        <listitem>Album of the current MOC song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_artist</option>
            </command>
        </term>
        <listitem>Artist of the current MOC song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_bitrate</option>
            </command>
        </term>
        <listitem>Bitrate in the current MOC song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_curtime</option>
            </command>
        </term>
        <listitem>Current time of the current MOC song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_file</option>
            </command>
        </term>
        <listitem>File name of the current MOC song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_rate</option>
            </command>
        </term>
        <listitem>Rate of the current MOC song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_song</option>
            </command>
        </term>
        <listitem>The current song name being played in MOC. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_state</option>
            </command>
        </term>
        <listitem>Current state of MOC; playing, stopped etc. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_timeleft</option>
            </command>
        </term>
        <listitem>Time left in the current MOC song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_title</option>
            </command>
        </term>
        <listitem>Title of the current MOC song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>moc_totaltime</option>
            </command>
        </term>
        <listitem>Total length of the current MOC song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>monitor</option>
            </command>
        </term>
        <listitem>Number of the monitor on which conky is running
        or the message "Not running in X" if this is the case. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>monitor_number</option>
            </command>
        </term>
        <listitem>Number of monitors or the message "Not running in
        X" if this is the case. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_album</option>
            </command>
        </term>
        <listitem>Album in current MPD song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_artist</option>
            </command>
        </term>
        <listitem>Artist in current MPD song must be enabled at
        compile 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_bar</option>
            </command>
            <option>(height),(width)</option>
        </term>
        <listitem>Bar of mpd's progress 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_bitrate</option>
            </command>
        </term>
        <listitem>Bitrate of current song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_date</option>
            </command>
        </term>
        <listitem>Date of current song
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_elapsed</option>
            </command>
        </term>
        <listitem>Song's elapsed time 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_file</option>
            </command>
        </term>
        <listitem>Prints the file name of the current MPD song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_length</option>
            </command>
        </term>
        <listitem>Song's length 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_name</option>
            </command>
        </term>
        <listitem>Prints the MPD name field 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_percent</option>
            </command>
        </term>
        <listitem>Percent of song's progress 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_random</option>
            </command>
        </term>
        <listitem>Random status (On/Off) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_repeat</option>
            </command>
        </term>
        <listitem>Repeat status (On/Off) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_smart</option>
            </command>
            <option>(max length)</option>
        </term>
        <listitem>Prints the song name in either the form "artist -
        title" or file name, depending on whats available 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_status</option>
            </command>
        </term>
        <listitem>Playing, stopped, et cetera. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_title</option>
            </command>
            <option>(max length)</option>
        </term>
        <listitem>Title of current MPD song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_track</option>
            </command>
        </term>
        <listitem>Prints the MPD track field 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>mpd_vol</option>
            </command>
        </term>
        <listitem>MPD's volume 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>nameserver</option>
            </command>
            <option>(index)</option>
        </term>
        <listitem>Print a nameserver from /etc/resolv.conf. Index
        starts at and defaults to 0. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>new_mails</option>
            </command>
            <option>(mailbox)</option>
            <option>(interval)</option>
        </term>
        <listitem>Unread mail count in the specified mailbox or
        mail spool if not. Both mbox and maildir type mailboxes are
        supported. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>nodename</option>
            </command>
        </term>
        <listitem>Hostname 
        <para /></listitem>
    </varlistentry>
     <varlistentry>
        <term>
            <command>
                <option>nodename_short</option>
            </command>
        </term>
        <listitem>Short hostname (same as 'hostname -s' shell command).
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>nvidia</option>
            </command>
            <option>threshold</option>
            <option>temp</option>
            <option>ambient</option>
            <option>gpufreq</option>
            <option>memfreq</option>
            <option>imagequality</option>
        </term>
        <listitem>Nvidia graficcard support for the XNVCtrl
        library. Each option can be shortened to the least
        significant part. Temperatures are printed as float, all
        other values as integer. 
        <simplelist>
            <member>
		<command>threshold</command>
		<option>The thresholdtemperature at
			which the gpu slows down</option>
            </member>
            <member>
		<command>temp</command>
		<option>Gives the gpu current
			temperature</option>
            </member>
            <member>
                <command>ambient</command>
                <option>Gives current air temperature near GPU
                case</option>
            </member>
            <member>
                <command>gpufreq</command>
                <option>Gives the current gpu frequency</option>
            </member>
            <member>
                <command>memfreq</command>
                <option>Gives the current mem frequency</option>
            </member>
            <member>
                <command>imagequality</command>
                <option>Which imagequality should be chosen by
                OpenGL applications</option>
            </member>
        </simplelist>
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>offset</option>
            </command>
            <option>(pixels)</option>
        </term>
        <listitem>Move text over by N pixels. See also $voffset. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>outlinecolor</option>
            </command>
            <option>(color)</option>
        </term>
        <listitem>Change outline color 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pb_battery</option>
            </command>
            <option>item</option>
        </term>
        <listitem>If running on Apple powerbook/ibook, display
        information on battery status. The item parameter
        specifies, what information to display. Exactly one item
        must be specified. Valid items are: 
        <simplelist>
            <member>
                <command>status</command>
                <option>Display if battery is fully charged,
                charging, discharging or absent (running on
                AC)</option>
            </member>
            <member>
                <command>percent</command>
                <option>Display charge of battery in percent, if
                charging or discharging. Nothing will be displayed,
                if battery is fully charged or absent.</option>
            </member>
            <member>
                <command>time</command>
                <option>Display the time remaining until the
                battery will be fully charged or discharged at
                current rate. Nothing is displayed, if battery is
                absent or if it's present but fully charged and not
                discharging.</option>
            </member>
        </simplelist>
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_chroot</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Directory used as rootdirectory by the process
	(this will be "/" unless the process did a chroot syscall)
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_cmdline</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Command line this process was invoked with
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_cwd</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Current working directory of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_environ</option>
            </command>
            <option>pid varname</option>
        </term>
        <listitem>Contents of a environment-var of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_environ_list</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>List of environment-vars that the process can see
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_exe</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Path to executed command that started the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_nice</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The nice value of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_openfiles</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>List of files that the process has open
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_parent</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The pid of the parent of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_priority</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The priority of the process (see 'priority' in "man 5 proc")
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_read</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Total number of bytes read by the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_state</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>State of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_state_short</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>One of the chars in "RSDZTW" representing the state
	of the process where R is running, S is sleeping in an
	interruptible wait, D is waiting in uninterruptible disk sleep,
	Z is zombie, T is traced or stopped (on a signal), and W is paging
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_stderr</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Filedescriptor binded to the STDERR of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_stdin</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Filedescriptor binded to the STDIN of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_stdout</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Filedescriptor binded to the STDOUT of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_threads</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Number of threads in process containing this thread
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_thread_list</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>List with pid's from threads from this process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_time_kernelmode</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Amount of time that the process has been scheduled in kernel mode in seconds
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_time_usermode</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Amount of time that the process has been scheduled in user mode in seconds
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_time</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Sum of $pid_time_kernelmode and $pid_time_usermode
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_uid</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The real uid of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_euid</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The effective uid of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_suid</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The saved set uid of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_fsuid</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The file system uid of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_gid</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The real gid of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_egid</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The effective gid of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_sgid</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The saved set gid of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_fsgid</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>The file system gid of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmpeak</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Peak virtual memory size of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmsize</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Virtual memory size of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmlck</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Locked memory size of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmhwm</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Peak resident set size ("high water mark") of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmrss</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Resident set size of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmdata</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Data segment size of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmstk</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Stack segment size of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmexe</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Text segment size of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmlib</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Shared library code size of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_vmpte</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Page table entries size of the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pid_write</option>
            </command>
            <option>pid</option>
        </term>
        <listitem>Total number of bytes written by the process
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>platform</option>
            </command>
            <option>(dev) type n (factor offset)</option>
        </term>
        <listitem>Platform sensor from sysfs (Linux 2.6). Parameter
        dev may be omitted if you have only one platform device.
        Platform type is either 'in' or 'vol' meaning voltage;
        'fan' meaning fan; 'temp' meaning temperature. Parameter n
        is number of the sensor. See /sys/bus/platform/devices/ on
        your local computer. The optional arguments 'factor' and
        'offset' allow precalculation of the raw input, which is
        being modified as follows: 'input = input * factor +
        offset'. Note that they have to be given as decimal values
        (i.e. contain at least one decimal place). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pop3_unseen</option>
            </command>
            <option>(args)</option>
        </term>
        <listitem>Displays the number of unseen messages in your
        global POP3 inbox by default. You can define individual
        POP3 inboxes separately by passing arguments to this
        object. Arguments are: "host user pass [-i interval (in
        seconds)] [-p port] [-e 'command'] [-r retries]". Default
        port is 110, default interval is 5 minutes, and default
        number of retries before giving up is 5. If the password is
        supplied as '*', you will be prompted to enter the password
        when Conky starts. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pop3_used</option>
            </command>
            <option>(args)</option>
        </term>
        <listitem>Displays the amount of space (in MiB, 2^20) used
        in your global POP3 inbox by default. You can define
        individual POP3 inboxes separately by passing arguments to
        this object. Arguments are: "host user pass [-i interval
        (in seconds)] [-p port] [-e 'command'] [-r retries]". Default
        port is 110, default interval is 5 minutes, and default
        number of retries before giving up is 5. If the password is
        supplied as '*', you will be prompted to enter the password
        when Conky starts. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>pre_exec</option>
            </command>
            <option>shell command</option>
        </term>
        <listitem>Executes a shell command one time before conky
        displays anything and puts output as text. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>processes</option>
            </command>
        </term>
        <listitem>Total processes (sleeping and running) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>read_tcp</option>
            </command>
            <option>(host) port</option>
        </term>
        <listitem>Connects to a tcp port on a host (default is
        localhost), reads every char available at the moment and
        shows them. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>replied_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of mails marked as replied in the
        specified mailbox or mail spool if not. Only maildir type
        mailboxes are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>rss</option>
            </command>
            <option>uri interval_in_minutes action (num_par
            (spaces_in_front))</option>
        </term>
        <listitem>
            <para>Download and parse RSS feeds. The interval may be
            a floating point value greater than 0, otherwise
            defaults to 15 minutes. Action may be one of the
            following: feed_title, item_title (with num par),
            item_desc (with num par) and item_titles (when using
            this action and spaces_in_front is given conky places
            that many spaces in front of each item). This object is
            threaded, and once a thread is created it can't be
            explicitly destroyed. One thread will run for each URI
            specified. You can use any protocol that Curl
            supports.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>running_processes</option>
            </command>
        </term>
        <listitem>Running processes (not sleeping), requires Linux
        2.6 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>running_threads</option>
            </command>
        </term>
        <listitem>Number of running (runnable) threads. Linux only.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>scroll</option>
            </command>
            <option>length (step) text</option>
        </term>
        <listitem>Scroll 'text' by 'step' characters showing
        'length' number of characters at the same time. The text
        may also contain variables. 'step' is optional and defaults
        to 1 if not set. If a var creates output on multiple lines
        then the lines are placed behind each other separated with
        a '|'-sign. If you change the textcolor inside $scroll it
        will automatically have it's old value back at the end of
        $scroll. The end and the start of text will be separated by
        'length' number of spaces. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>seen_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of mails marked as seen in the specified
        mailbox or mail spool if not. Only maildir type mailboxes
        are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>shadecolor</option>
            </command>
            <option>(color)</option>
        </term>
        <listitem>Change shading color 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>smapi</option>
            </command>
            <option>(ARGS)</option>
        </term>
        <listitem>when using smapi, display contents of the
        /sys/devices/platform/smapi directory. ARGS are either
        '(FILENAME)' or 'bat (INDEX) (FILENAME)' to display the
        corresponding files' content. This is a very raw method of
        accessing the smapi values. When available, better use one
        of the smapi_* variables instead. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>smapi_bat_bar</option>
            </command>
            <option>(INDEX),(height),(width)</option>
        </term>
        <listitem>when using smapi, display the remaining capacity
        of the battery with index INDEX as a bar. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>smapi_bat_perc</option>
            </command>
            <option>(INDEX)</option>
        </term>
        <listitem>when using smapi, display the remaining capacity
        in percent of the battery with index INDEX. This is a
        separate variable because it supports the 'use_spacer'
        configuration option. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>smapi_bat_power</option>
            </command>
            <option>INDEX</option>
        </term>
        <listitem>when using smapi, display the current power of
        the battery with index INDEX in watt. This is a separate
        variable because the original read out value is being
        converted from mW. The sign of the output reflects charging
        (positive) or discharging (negative) state. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>smapi_bat_temp</option>
            </command>
            <option>INDEX</option>
        </term>
        <listitem>when using smapi, display the current temperature
        of the battery with index INDEX in degree Celsius. This is
        a separate variable because the original read out value is
        being converted from milli degree Celsius. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>sony_fanspeed</option>
            </command>
        </term>
        <listitem>Displays the Sony VAIO fanspeed information if
        sony-laptop kernel support is enabled. Linux only. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>stippled_hr</option>
            </command>
            <option>(space)</option>
        </term>
        <listitem>Stippled (dashed) horizontal line 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>swap</option>
            </command>
        </term>
        <listitem>Amount of swap in use 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>swapbar</option>
            </command>
            <option>(height),(width)</option>
        </term>
        <listitem>Bar that shows amount of swap in use 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>swapfree</option>
            </command>
        </term>
        <listitem>Amount of free swap 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>swapmax</option>
            </command>
        </term>
        <listitem>Total amount of swap 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>swapperc</option>
            </command>
        </term>
        <listitem>Percentage of swap in use 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>sysname</option>
            </command>
        </term>
        <listitem>System name, Linux for example 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>tab</option>
            </command>
            <option>(width, (start))</option>
        </term>
        <listitem>Puts a tab of the specified width, starting from
        column 'start'. The unit is pixels for both arguments. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>tail</option>
            </command>
            <option>logfile lines (next_check)</option>
        </term>
        <listitem>Displays last N lines of supplied text file. The
        file is checked every 'next_check' update. If next_check is
        not supplied, Conky defaults to 2. Max of 30 lines can be
        displayed, or until the text buffer is filled. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>tcp_portmon</option>
            </command>
            <option>port_begin port_end item (index)</option>
        </term>
        <listitem>
            <para>TCP port (both IPv6 and IPv4) monitor for
            specified local ports. Port numbers must be in
            the range 1 to 65535. Valid items are:</para>
            <simplelist>
                <member>
                    <command>count</command>
                    <option>Total number of connections in the
                    range</option>
                </member>
                <member>
                    <command>rip</command>
                    <option>Remote ip address</option>
                </member>
                <member>
                    <command>rhost</command>
                    <option>Remote host name</option>
                </member>
                <member>
                    <command>rport</command>
                    <option>Remote port number</option>
                </member>
                <member>
                    <command>rservice</command>
                    <option>Remote service name from
                    /etc/services</option>
                </member>
                <member>
                    <command>lip</command>
                    <option>Local ip address</option>
                </member>
                <member>
                    <command>lhost</command>
                    <option>Local host name</option>
                </member>
                <member>
                    <command>lport</command>
                    <option>Local port number</option>
                </member>
                <member>
                    <command>lservice</command>
                    <option>Local service name from
                    /etc/services</option>
                </member>
            </simplelist>
            <para>The connection index provides you with access to
            each connection in the port monitor. The monitor will
            return information for index values from 0 to n-1
            connections. Values higher than n-1 are simply ignored.
            For the "count" item, the connection index must be
            omitted. It is required for all other items.</para>
            <para>Examples:</para>
            <simplelist>
                <member>
                    <command>${tcp_portmon 6881 6999
                    count}</command>
                    <option>Displays the number of connections in
                    the bittorrent port range</option>
                </member>
                <member>
                    <command>${tcp_portmon 22 22 rip 0}</command>
                    <option>Displays the remote host ip of the
                    first sshd connection</option>
                </member>
                <member>
                    <command>${tcp_portmon 22 22 rip 9}</command>
                    <option>Displays the remote host ip of the
                    tenth sshd connection</option>
                </member>
                <member>
                    <command>${tcp_portmon 1 1024 rhost
                    0}</command>
                    <option>Displays the remote host name of the
                    first connection on a privileged port</option>
                </member>
                <member>
                    <command>${tcp_portmon 1 1024 rport
                    4}</command>
                    <option>Displays the remote host port of the
                    fifth connection on a privileged port</option>
                </member>
                <member>
                    <command>${tcp_portmon 1 65535 lservice
                    14}</command>
                    <option>Displays the local service name of the
                    fifteenth connection in the range of all
                    ports</option>
                </member>
            </simplelist>
            <para>Note that port monitor variables which share the
            same port range actually refer to the same monitor, so
            many references to a single port range for different
            items and different indexes all use the same monitor
            internally. In other words, the program avoids creating
            redundant monitors.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>templateN</option>
            </command>
            <option>(arg1)</option>
            <option>(arg2)</option>
            <option>(arg3 ...)</option>
        </term>
        <listitem>
            <para>Evaluate the content of the templateN
            configuration variable (where N is a value between 0
            and 9, inclusively), applying substitutions as
            described in the documentation of the corresponding
            configuration variable. The number of arguments is
            optional, but must match the highest referred index in
            the template. You can use the same special sequences in
            each argument as the ones valid for a template
            definition, e.g. to allow an argument to contain a
            whitespace. Also simple nesting of templates is
            possible this way.</para>
            <para>Here are some examples of template
            definitions:</para>
            <simplelist>
                <member>template0 $\1\2</member>
                <member>template1 \1: ${fs_used \2} / ${fs_size
                \2}</member>
                <member>template2 \1 \2</member>
            </simplelist>
            <para>The following list shows sample usage of the
            templates defined above, with the equivalent syntax
            when not using any template at all:</para>
            <table>
                <tgroup cols="2">
                    <thead>
                        <row rowsep="1">
                            <entry>using template</entry>
                            <entry>same without template</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>${template0 node name}</entry>
                            <entry>$nodename</entry>
                        </row>
                        <row>
                            <entry>${template1 root /}</entry>
                            <entry>root: ${fs_free /} / ${fs_size
                            /}</entry>
                        </row>
                        <row>
                            <entry>
                                ${template1
                                ${template2\ disk\ root}
                                /}
                            </entry>
                            <entry>
                                disk root:
                                ${fs_free /} / ${fs_size
                                /}
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>texeci</option>
            </command>
            <option>interval command</option>
        </term>
        <listitem>Runs a command at an interval inside a thread and
        displays the output. Same as $execi, except the command is
        run inside a thread. Use this if you have a slow script to
        keep Conky updating. You should make the interval slightly
        longer then the time it takes your script to execute. For
        example, if you have a script that take 5 seconds to
        execute, you should make the interval at least 6 seconds.
        See also $execi. This object will clean up the thread when
        it is destroyed, so it can safely be used in a nested
        fashion, though it may not produce the desired behaviour if
        used this way. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>threads</option>
            </command>
        </term>
        <listitem>Total threads
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>time</option>
            </command>
            <option>(format)</option>
        </term>
        <listitem>Local time, see man strftime to get more
        information about format 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>to_bytes</option>
            </command>
            <option>size</option>
        </term>
        <listitem>If 'size' is a number followed by a size-unit
        (kilobyte,mb,GiB,...) then it converts the size to bytes
        and shows it without unit, otherwise it just shows 'size'. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>top</option>
            </command>
            <option>type num</option>
        </term>
        <listitem>This takes arguments in the form:top (name)
        (number) Basically, processes are ranked from highest to
        lowest in terms of cpu usage, which is what (num)
        represents. The types are: "name", "pid", "cpu", "mem",
        "mem_res", "mem_vsize", "time", "uid", "user", "io_perc", "io_read" and
        "io_write". There can be a max of 10 processes listed. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>top_io</option>
            </command>
            <option>type num</option>
        </term>
        <listitem>Same as top, except sorted by the amount of I/O
        the process has done during the update interval 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>top_mem</option>
            </command>
            <option>type num</option>
        </term>
        <listitem>Same as top, except sorted by mem usage instead
        of cpu 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>top_time</option>
            </command>
            <option>type num</option>
        </term>
        <listitem>Same as top, except sorted by total CPU time
        instead of current CPU usage 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>totaldown</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Total download, overflows at 4 GB on Linux with
        32-bit arch and there doesn't seem to be a way to know how
        many times it has already done that before conky has
        started. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>totalup</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Total upload, this one too, may overflow 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>trashed_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of mails marked as trashed in the
        specified mailbox or mail spool if not. Only maildir type
        mailboxes are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>tztime</option>
            </command>
            <option>(timezone (format))</option>
        </term>
        <listitem>Local time for specified timezone, see man
        strftime to get more information about format. The timezone
        argument is specified in similar fashion as TZ environment
        variable. For hints, look in /usr/share/zoneinfo. e.g.
        US/Pacific, Europe/Zurich, etc. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>gid_name</option>
            </command>
            <option>gid</option>
        </term>
        <listitem>Name of group with this gid
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>uid_name</option>
            </command>
            <option>uid</option>
        </term>
        <listitem>Username of user with this uid
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>unflagged_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of mails not marked as flagged in the
        specified mailbox or mail spool if not. Only maildir type
        mailboxes are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>unforwarded_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of mails not marked as forwarded in the
        specified mailbox or mail spool if not. Only maildir type
        mailboxes are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>unreplied_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of mails not marked as replied in the
        specified mailbox or mail spool if not. Only maildir type
        mailboxes are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>unseen_mails</option>
            </command>
            <option>(maildir)</option>
            <option>(interval)</option>
        </term>
        <listitem>Number of new or unseen mails in the specified
        mailbox or mail spool if not. Only maildir type mailboxes
        are supported, mbox type will return -1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>updates</option>
            </command>
            <option>Number of updates</option>
        </term>
        <listitem>for debugging 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>upspeed</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Upload speed in suitable IEC units 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>upspeedf</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Upload speed in KiB with one decimal 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>upspeedgraph</option>
            </command>
            <option>(netdev) (height),(width) (gradient colour 1)
            (gradient colour 2) (scale) (-t) (-l)</option>
        </term>
        <listitem>Upload speed graph, colours defined in hex, minus
        the #. If scale is non-zero, it becomes the scale for the
        graph. Uses a logarithmic scale (to see small numbers) when
        you use the -l switch. Takes the switch '-t' to use a
        temperature gradient, which makes the gradient values
        change depending on the amplitude of a particular graph
        value (try it and see). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>uptime</option>
            </command>
        </term>
        <listitem>Uptime 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>uptime_short</option>
            </command>
        </term>
        <listitem>Uptime in a shorter format 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>user_names</option>
            </command>
        </term>
        <listitem>Lists the names of the users logged in 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>user_number</option>
            </command>
        </term>
        <listitem>Number of users logged in 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>user_terms</option>
            </command>
        </term>
        <listitem>Lists the consoles in use 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>user_times</option>
            </command>
        </term>
        <listitem>Lists how long users have been logged in for 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>user_time</option>
            </command>
	    <option>console</option>
        </term>
        <listitem>Lists how long the user for the given console has been
        logged in for
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>utime</option>
            </command>
            <option>(format)</option>
        </term>
        <listitem>Display time in UTC (universal coordinate time). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>voffset</option>
            </command>
            <option>(pixels)</option>
        </term>
        <listitem>Change vertical offset by N pixels. Negative
        values will cause text to overlap. See also $offset. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>voltage_mv</option>
            </command>
            <option>(n)</option>
        </term>
        <listitem>Returns CPU #n's voltage in mV. CPUs are counted
        from 1. If omitted, the parameter defaults to 1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>voltage_v</option>
            </command>
            <option>(n)</option>
        </term>
        <listitem>Returns CPU #n's voltage in V. CPUs are counted
        from 1. If omitted, the parameter defaults to 1. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>weather</option>
            </command>
            <option>URI locID data_type
            (interval_in_minutes)</option>
        </term>
        <listitem>
            <para>Download, parse and display METAR data.</para>
            <para>For the 'URI', there are two
            possibilities:</para>
            <simplelist>
                <member>
                http://weather.noaa.gov/pub/data/observations/metar/stations/</member>
                <member>
                http://xoap.weather.com/weather/local/</member>
            </simplelist>
            <para>The first one is free to use but the second
            requires you to register and obtain your partner ID and
            license key. These two must be written, separated by a
            space, into a file called .xoaprc which needs to be
            placed into your home directory.</para>
            <para>'locID' must be a valid location identifier for
            the required uri. For the NOAA site this must be a
            valid ICAO (see for instance
            https://pilotweb.nas.faa.gov/qryhtml/icao/). For the
            weather.com site this must be a valid location ID (see
            for instance
            http://aspnetresources.com/tools/locid.aspx).</para>
            <para>'data_type' must be one of the following:</para>
            <simplelist>
                <member>
                    <command>last_update</command>
                    <para>The date and time stamp of the data.
                    The result depends on the URI used. For the
                    NOAA site it is date (yyyy/mm/dd) and UTC time.
                    For the weather.com one it is date
                    ([m]m/[d]d/yy) and Local Time of the
                    station.</para>
                </member>
                <member>
                    <command>temperature</command>
					<para>Air temperature (you can use the
                    'temperature_unit' config setting to change
					units)</para>
                </member>
                <member>
                    <command>cloud_cover</command>
                    <para>The highest cloud cover status</para>
                </member>
                <member>
                    <command>pressure</command>
                    <para>Air pressure in millibar</para>
                </member>
                <member>
                    <command>wind_speed</command>
                    <para>Wind speed in km/h</para>
                </member>
                <member>
                    <command>wind_dir</command>
                    <para>Wind direction</para>
                </member>
                <member>
                    <command>wind_dir_DEG</command>
                    <para>Compass wind direction</para>
                </member>
                <member>
                    <command>humidity</command>
                    <para>Relative humidity in %</para>
                </member>
                <member>
                    <command>weather</command>
                    <para>Any relevant weather event (rain, snow,
                    etc.). This is not used if you are querying the
                    weather.com site since this data is aggregated
                    into the cloud_cover one</para>
                </member>
                <member>
                    <command>icon</command>
                    <para>Weather icon (only for
                    www.weather.com). Can be used together with the
                    icon kit provided upon registering to their
                    service.</para>
                </member>
            </simplelist>
            <para>'delay_in_minutes' (optional, default 30) cannot
            be less than 30 minutes.</para>
            <para>This object is threaded, and once a thread is
            created it can't be explicitly destroyed. One thread
            will run for each URI specified.</para>
            <para>Note that these variables are still EXPERIMENTAL
            and can be subject to many future changes.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>weather_forecast</option>
            </command>
            <option>URI locID day data_type
            (interval_in_minutes)</option>
        </term>
        <listitem>
            <para>Download, parse and display weather forecast data
	    for a given day (daytime only).</para>
            <para>For the 'URI', for the time being only
            http://xoap.weather.com/weather/local/ is
	    supported. See 'weather' above for details of usage</para>
            <para>'locID', see 'weather' above.</para>
            <para>'day' is a number from 0 (today) to 4 (3 days
            after tomorrow).</para>
            <para>'data_type' must be one of the following:</para>
            <simplelist>
                <member>
                    <command>day</command>
					<option>Day of the week</option>
				</member>
                <member>
                    <command>date</command>
					<option>Date, in the form MMM DD (ie. Jul 14)</option>
				</member>
                <member>
                    <command>low</command>
					<option>Minimun temperature (you can use the
                    'temperature_unit' config setting to change
                    units)</option>
				</member>
                <member>
                    <command>hi</command>
					<option>Maximum temperature (you can use the
                    'temperature_unit' config setting to change
                    units)</option>
				</member>
                <member>
                    <command>icon</command>
                    <option>Weather icon. Can be used together with the
                    icon kit provided upon registering to the weather.com
                    service</option>
				</member>
                <member>
                    <command>forecast</command>
                    <option>Weather forecast (sunny, rainy, etc.)</option>
				</member>
                <member>
                    <command>wind_speed</command>
                    <option>Wind speed in km/h</option>
                </member>
                <member>
                    <command>wind_dir</command>
                    <option>Wind direction</option>
                </member>
                <member>
                    <command>wind_dir_DEG</command>
                    <option>Compass wind direction</option>
                </member>
                <member>
                    <command>humidity</command>
                    <option>Relative humidity in %</option>
                </member>
                <member>
                    <command>precipitation</command>
                    <option>Probability of having a
					precipitation (in %)</option>
                </member>
            </simplelist>
            <para>'delay_in_minutes' (optional, default 210) cannot
            be lower than 210 min.</para>
            <para>This object is threaded, and once a thread is
            created it can't be explicitly destroyed. One thread
            will run for each URI specified. You can use any
            protocol that Curl supports.</para>
            <para>Note that these variables are still EXPERIMENTAL
            and can be subject to many future changes.</para>
	</listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>wireless_ap</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Wireless access point MAC address (Linux only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>wireless_bitrate</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Wireless bitrate (ie 11 Mb/s) (Linux only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>wireless_essid</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Wireless access point ESSID (Linux only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>wireless_link_bar</option>
            </command>
            <option>(height),(width) (net)</option>
        </term>
        <listitem>Wireless link quality bar (Linux only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>wireless_link_qual</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Wireless link quality (Linux only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>wireless_link_qual_max</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Wireless link quality maximum value (Linux only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>wireless_link_qual_perc</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Wireless link quality in percents (Linux only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>wireless_mode</option>
            </command>
            <option>(net)</option>
        </term>
        <listitem>Wireless mode (Managed/Ad-Hoc/Master) (Linux
        only) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>words</option>
            </command>
            <option>textfile</option>
        </term>
        <listitem>Displays the number of words in the given file 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_album</option>
            </command>
        </term>
        <listitem>Album in current XMMS2 song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_artist</option>
            </command>
        </term>
        <listitem>Artist in current XMMS2 song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_bar</option>
            </command>
            <option>(height),(width)</option>
        </term>
        <listitem>Bar of XMMS2's progress 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_bitrate</option>
            </command>
        </term>
        <listitem>Bitrate of current song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_comment</option>
            </command>
        </term>
        <listitem>Comment in current XMMS2 song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_date</option>
            </command>
        </term>
        <listitem>Returns song's date. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_duration</option>
            </command>
        </term>
        <listitem>Duration of current song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_elapsed</option>
            </command>
        </term>
        <listitem>Song's elapsed time 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_genre</option>
            </command>
        </term>
        <listitem>Genre in current XMMS2 song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_id</option>
            </command>
        </term>
        <listitem>XMMS2 id of current song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_percent</option>
            </command>
        </term>
        <listitem>Percent of song's progress 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_playlist</option>
            </command>
        </term>
        <listitem>Returns the XMMS2 playlist. 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_size</option>
            </command>
        </term>
        <listitem>Size of current song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_smart</option>
            </command>
        </term>
        <listitem>Prints the song name in either the form "artist -
        title" or file name, depending on whats available 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_status</option>
            </command>
        </term>
        <listitem>XMMS2 status (Playing, Paused, Stopped, or
        Disconnected) 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_timesplayed</option>
            </command>
        </term>
        <listitem>Number of times a song was played (presumably). 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_title</option>
            </command>
        </term>
        <listitem>Title in current XMMS2 song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_tracknr</option>
            </command>
        </term>
        <listitem>Track number in current XMMS2 song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>xmms2_url</option>
            </command>
        </term>
        <listitem>Full path to current song 
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_jack_active</option>
            </command>
        </term>
        <listitem>If JACK is active display everything between the
        $if_jack_active and the matching $endif.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_cpu_load</option>
            </command>
        </term>
        <listitem>Prints the current CPU load as estimated by JACK.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_buffer_size</option>
            </command>
        </term>
        <listitem>Shows the current JACK buffer size.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_sampler_rate</option>
            </command>
        </term>
        <listitem>Shows the current JACK sample rate.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_xruns</option>
            </command>
        </term>
        <listitem>Shows a count of xruns (buffer over/under runs)
        that have ocurred.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_jack_rolling</option>
            </command>
        </term>
        <listitem>If the JACK transport mechanism is rolling, display
        everything between the $if_jack_rolling and the matching $endif.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_frame</option>
            </command>
        </term>
        <listitem>Shows the frame number in the JACK transport timeline.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_hour</option>
            </command>
        </term>
        <listitem>Shows the frame number as hours.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_min</option>
            </command>
        </term>
        <listitem>Shows the frame number as minutes within the hour.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_sec</option>
            </command>
        </term>
        <listitem>Shows the frame number as seconds within the minute.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>if_jack_bbt</option>
            </command>
        </term>
        <listitem>If JACK transport is keeping BBT (bars/beats/ticks)
        information then display everything between $if_jack_bbt and
        the corresponding $endif.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_beat_type</option>
            </command>
        </term>
        <listitem>Shows the beat type of the time signature the JACK
        transport mechanism is using.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_beats_per_bar</option>
            </command>
        </term>
        <listitem>Shows the number of beats per bar the JACK
        transport mechanism is using.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_bpm</option>
            </command>
        </term>
        <listitem>Shows the beats per minute the JACK transport
        mechanism is using.
        <para /></listitem>
    </varlistentry>

    <varlistentry>
        <term>
            <command>
                <option>jack_bar</option>
            </command>
        </term>
        <listitem>The bar position JACK transport is currently located.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_beat</option>
            </command>
        </term>
        <listitem>The beat within the bar JACK transport is currently
        located.
        <para /></listitem>
    </varlistentry>
    <varlistentry>
        <term>
            <command>
                <option>jack_tick</option>
            </command>
        </term>
        <listitem>The tick within the beat JACK transport is currently
        located.
        <para /></listitem>
    </varlistentry>
</variablelist>
