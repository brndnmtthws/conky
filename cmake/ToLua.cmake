#
# Conky, a system monitor, based on torsmo
#
# Please see COPYING for details
#
# Copyright (c) 2005-2024 Brenden Matthews, et. al. (see AUTHORS) All rights
# reserved.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#[[.md:
Applies tolua++ to some `<package>` input and stores generated files in
`<sources>` variable.

```cmake
wrap_tolua(<package> [PATCH <patch-file>] <sources>)
```

Optionally, a `<patch-file>` can be specified and it will be applied to the
sources generated by tolua++.
]]
function(wrap_tolua LUA_PACKAGE)
  cmake_parse_arguments(PARSE_ARGV 1 arg
    "" "PATCH" ""
  )
  list(LENGTH arg_UNPARSED_ARGUMENTS POSITIONAL_COUNT)
  list(POP_FRONT arg_UNPARSED_ARGUMENTS SOURCE_OUT)

  cmake_path(GET LUA_PACKAGE STEM PACKAGE_NAME)
  file(REAL_PATH "${LUA_PACKAGE}" LUA_PACKAGE)

  set(${SOURCE_OUT})

  list(APPEND ${SOURCE_OUT} "${CMAKE_CURRENT_BINARY_DIR}/lib${PACKAGE_NAME}.cc")
  if(DEFINED arg_PATCH)
    file(REAL_PATH "${arg_PATCH}" PATCH)
    set(TOLUA_OUT ${CMAKE_CURRENT_BINARY_DIR}/lib${PACKAGE_NAME}-unpatched.cc)
    add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/lib${PACKAGE_NAME}.cc
      COMMAND ${APP_PATCH} -s ${TOLUA_OUT} ${PATCH} -o
      ${CMAKE_CURRENT_BINARY_DIR}/lib${PACKAGE_NAME}.cc
      DEPENDS ${TOLUA_OUT} ${PATCH}
      COMMENT "Patching lib${PACKAGE_NAME}.cc"
      VERBATIM)
    set_source_files_properties(${TOLUA_OUT} PROPERTIES GENERATED TRUE)
  else()
    set(TOLUA_OUT ${CMAKE_CURRENT_BINARY_DIR}/lib${PACKAGE_NAME}.cc)
  endif()

  # Call toluapp from 3rdparty/ path directly. The last argument to toluapp is
  # the path to the tolua Lua sources.
  add_custom_command(OUTPUT ${TOLUA_OUT}
    COMMAND toluapp -n ${PACKAGE_NAME} -o ${TOLUA_OUT} ${LUA_PACKAGE}
    ${CMAKE_SOURCE_DIR}/3rdparty/toluapp/src/bin/lua/
    DEPENDS ${LUA_PACKAGE}
    COMMENT "Running tolua++ on ${PACKAGE_NAME}.pkg"
    VERBATIM)

  set_source_files_properties("${${SOURCE_OUT}}" PROPERTIES GENERATED TRUE)
  set_source_files_properties(
    "${${SOURCE_OUT}}"
    PROPERTIES
    COMPILE_FLAGS
    "-Wno-unused-parameter -Wno-cast-qual -Wno-error=pedantic"
  )

  message("SOURCE_OUT ${SOURCE_OUT} ${${SOURCE_OUT}}")

  set(${SOURCE_OUT} "${${SOURCE_OUT}}" PARENT_SCOPE)
endfunction()
